@model IEnumerable<BugTracker.Models.Tickets>

@{
    ViewBag.Title = "Index";
}

<h2>My Assigned Tickets</h2>

<p>
    @Html.ActionLink("Create New", "Create") | @Html.ActionLink("All Tickets", "Index") | @Html.ActionLink("My Assigned Tickets", "AssignedTickets")
    @if (User.IsInRole("Submitter"))
    {
        <span>|</span> @Html.ActionLink("My Submitted Tickets", "SubmittedTickets")
    }

    |

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken();
        @Html.Label("Search")
        <span>&nbsp;</span>
        @Html.TextBox("searchStr")
        <input type="submit" value="Go" />
    }
</p>
<table class="table" id="data-table">
    <thead>
        <tr>
            <th>
                Prioirity
            </th>
            <th>
                Updated
            </th>
            <th>
                Status
            </th>
            <th>
                Name
            </th>
            <th>
                Type
            </th>
            <th>
                Title
            </th>
            <th>
                Assigned To
            </th>

            <th>
                Submitted By
            </th>
            <th>
                Created
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td class="ticket-priority">
                    @Html.DisplayFor(modelItem => item.TicketPriority.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Updated)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TicketStatus.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Project.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TicketType.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AssignedUser.Displayname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OwnerUser.Displayname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    @if (ViewBag.UserId == item.AssignedUserId || User.IsInRole("Admin") || (User.IsInRole("Project Manager") && item.Project.Users.Contains(ViewBag.User)))
                {
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id })
                    }
                    else
                    {
                        @Html.ActionLink("Details", "Details", new { id = item.Id })
                    }

                    @if (User.IsInRole("Admin"))
                {
                        <span>|</span>
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
@*<div id="paging">
    <span>Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</span>
    <span>@Html.PagedListPager(Model, page => Url.Action("Index", new { page }))</span>
</div>*@
@section scripts {
@Scripts.Render("~/js/PrioritySort.js")
    <script>
        $(document).ready(function () {
            
                        
            $('#data-table').DataTable();
        });

    </script>
}



@*@model IEnumerable<BugTracker.Models.Tickets>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create") | @Html.ActionLink("All Tickets","Index")
    @if(User.IsInRole("Submitter"))
    {
        <span>|</span> @Html.ActionLink("My Submitted Tickets","SubmittedTickets")
    }
</p>
<table class="table">
    <tr>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.TicketPriority.Name).ToString(), "AssignedTickets", new { orderby = "priority" })
        </th>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.Updated).ToString(), "AssignedTickets", new { orderby = "updated" })
        </th>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.TicketStatus.Name).ToString(), "AssignedTickets", new { orderby = "status" })
        </th>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.Project.Name).ToString(), "AssignedTickets", new { orderby = "project" })
        </th>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.TicketType.Name).ToString(), "AssignedTickets", new { orderby = "type" })
        </th>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.Title).ToString(), "AssignedTickets", new { orderby = "title" })
        </th>
        <th>
            @Html.ActionLink("Assigned To", "AssignedTickets", new { orderby = "assigned" })
        </th>

        <th>
            @Html.ActionLink("Submitted By", "AssignedTickets", new { orderby = "submitted" })
        </th>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.Created).ToString(), "AssignedTickets", new { orderby = "created" })
        </th>

        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.TicketPriority.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Updated)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TicketStatus.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Project.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TicketType.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AssignedUser.Displayname)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.OwnerUser.Displayname)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Created)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>*@
